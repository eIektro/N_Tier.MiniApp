// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using N_Tier.MiniApp.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace N_Tier.MiniApp.Data.Migrations
{
    [DbContext(typeof(MiniAppDbContext))]
    partial class MiniAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("N_Tier.MiniApp.Core.Models.Gorev", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Gorevadi")
                        .IsRequired()
                        .HasColumnName("gorevadi")
                        .HasColumnType("character varying");

                    b.Property<string>("Gorevtanimi")
                        .HasColumnName("gorevtanimi")
                        .HasColumnType("character varying");

                    b.HasKey("Id");

                    b.ToTable("gorev");
                });

            modelBuilder.Entity("N_Tier.MiniApp.Core.Models.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("Dogumtarihi")
                        .HasColumnName("dogumtarihi")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("character varying");

                    b.Property<int?>("Gorev")
                        .HasColumnName("gorev")
                        .HasColumnType("integer");

                    b.Property<string>("Isim")
                        .IsRequired()
                        .HasColumnName("isim")
                        .HasColumnType("character varying");

                    b.Property<string>("Pasword")
                        .HasColumnName("pasword")
                        .HasColumnType("character varying");

                    b.Property<int?>("Sirket")
                        .HasColumnName("sirket")
                        .HasColumnType("integer");

                    b.Property<string>("Soyisim")
                        .IsRequired()
                        .HasColumnName("soyisim")
                        .HasColumnType("character varying");

                    b.HasKey("Id");

                    b.HasIndex("Gorev")
                        .HasName("fki_kullanicigorev_foreign");

                    b.HasIndex("Sirket")
                        .HasName("fki_kullanicisirket_foreign");

                    b.ToTable("kullanici");
                });

            modelBuilder.Entity("N_Tier.MiniApp.Core.Models.Sirket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Adres")
                        .HasColumnName("adres")
                        .HasColumnType("character varying");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("character varying");

                    b.Property<byte[]>("Logo")
                        .HasColumnName("logo")
                        .HasColumnType("bytea");

                    b.Property<string>("Sirketadi")
                        .IsRequired()
                        .HasColumnName("sirketadi")
                        .HasColumnType("character varying");

                    b.Property<string>("Unvan")
                        .HasColumnName("unvan")
                        .HasColumnType("character varying");

                    b.HasKey("Id");

                    b.ToTable("sirket");
                });

            modelBuilder.Entity("N_Tier.MiniApp.Core.Models.Kullanici", b =>
                {
                    b.HasOne("N_Tier.MiniApp.Core.Models.Gorev", "GorevNavigation")
                        .WithMany("Kullanici")
                        .HasForeignKey("Gorev")
                        .HasConstraintName("kullanicigorev_foreign");

                    b.HasOne("N_Tier.MiniApp.Core.Models.Sirket", "SirketNavigation")
                        .WithMany("Kullanici")
                        .HasForeignKey("Sirket")
                        .HasConstraintName("kullanicisirket_foreign");
                });
#pragma warning restore 612, 618
        }
    }
}
